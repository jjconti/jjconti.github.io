<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>En borrador permanente (ESR)</title><link>http://www.juanjoconti.com.ar/</link><description></description><atom:link href="http://www.juanjoconti.com.ar/categories/esr.xml" type="application/rss+xml" rel="self"></atom:link><language>es</language><lastBuildDate>Tue, 23 Jun 2015 01:31:19 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Aprender a programar</title><link>http://www.juanjoconti.com.ar/posts/2009/01/04/aprender-a-programar.html</link><dc:creator>Juanjo</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;blockquote&gt;"La formación en informática no puede convertir a nadie en experto programador, de la misma forma que estudiar pinceles y pigmentos puede hacer a alguien un experto pintor"
&lt;p&gt;&lt;em&gt; -- Eric S. Raymond&lt;/em&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;a href="http://www.juanjoconti.com.ar/wp-content/uploads/2009/01/eric_steven_raymondcut.png"&gt;&lt;img class="alignright size-medium wp-image-1091" title="eric_steven_raymondcut" src="http://www.juanjoconti.com.ar/wp-content/uploads/2009/01/eric_steven_raymondcut-239x300.png" alt="" width="239" height="300"&gt;&lt;/a&gt;Lo que se necesita es practicar, practicar y practicar. Juntar horas de vuelo. &lt;a href="http://en.wikipedia.org/wiki/Malcolm_Gladwell" target="_blank"&gt;Malcolm Gladwell&lt;/a&gt; publicó hace poco &lt;a title="Outliers" href="http://en.wikipedia.org/wiki/Outliers_(book)" target="_blank"&gt;un libro&lt;/a&gt; en el que expone (junto con muchos otros ejemplos de otros ámbitos) que genios como Bill Gates y Bill Joy lograron sus éxitos como programadores gracias a las miles de horas que le dedicaron a esta actividad durante sus años en la universidad.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Eric Steven Raymond&lt;/strong&gt;, también conocido como ESR, es el autor de &lt;em&gt;&lt;a class="mw-redirect" title="La Catedral y el Bazar" href="http://es.wikipedia.org/wiki/La_Catedral_y_el_Bazar"&gt;The Catedral and the Bazar&lt;/a&gt;&lt;/em&gt; (&lt;em&gt;La Catedral y el Bazar&lt;/em&gt;) y el responsable actual del &lt;em&gt;Jargon File&lt;/em&gt; (&lt;em&gt;&lt;a class="new" title="The New Hacker's Dictionary (aún no redactado)" href="http://es.wikipedia.org/w/index.php?title=The_New_Hacker%27s_Dictionary&amp;amp;action=edit&amp;amp;redlink=1"&gt;The New Hacker's Dictionary&lt;/a&gt;&lt;/em&gt;). Si bien con el &lt;em&gt;&lt;a title="Archivo de la jerga" href="http://es.wikipedia.org/wiki/Archivo_de_la_jerga"&gt;Jargon File&lt;/a&gt;&lt;/em&gt; obtuvo fama como historiador de la cultura &lt;a title="Hacker" href="http://es.wikipedia.org/wiki/Hacker"&gt;hacker&lt;/a&gt;, se convirtió después de 1997 en una figura líder en el &lt;a href="http://es.wikipedia.org/wiki/Open_source#Movimiento_del_open_source" target="_blank"&gt;Movimiento del Open Source&lt;/a&gt; y el &lt;a title="Código abierto" href="http://es.wikipedia.org/wiki/C%C3%B3digo_abierto"&gt;Código abierto&lt;/a&gt;. Hoy día es uno de sus personajes más famosos y controvertidos.&lt;/p&gt;
&lt;p&gt;Fue el coordinador del cliente de correo electrónico &lt;a title="Fetchmail" href="http://es.wikipedia.org/wiki/Fetchmail"&gt;Fetchmail&lt;/a&gt;. También colaboró con los modos de edición de &lt;a title="Emacs" href="http://es.wikipedia.org/wiki/Emacs"&gt;Emacs&lt;/a&gt; y coescribió porciones de la biblioteca GNU &lt;a title="Ncurses" href="http://es.wikipedia.org/wiki/Ncurses"&gt;ncurses&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Fuente:&lt;/strong&gt; &lt;a title="ESR" href="http://es.wikipedia.org/wiki/Eric_S._Raymond" target="_blank"&gt;Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Página web del autor: &lt;a title="esr at catb" href="http://catb.org/~esr/" target="_blank"&gt;http://catb.org/~esr/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Este post es parte de &lt;a href="http://www.juanjoconti.com.ar/2009/01/01/citas-sobre-programacion/" target="_self"&gt;Citas sobre programación&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</description><category>ESR</category><category>General</category><category>programación</category><guid>http://www.juanjoconti.com.ar/posts/2009/01/04/aprender-a-programar.html</guid><pubDate>Sun, 04 Jan 2009 12:00:26 GMT</pubDate></item><item><title>The Art of Unix Programming</title><link>http://www.juanjoconti.com.ar/posts/2005/11/04/the-art-of-unix-programming.html</link><dc:creator>Juanjo</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;img class="alignleft" src="http://www.catb.org/~esr/writings/taoup/cover-small.png" alt="TAOUP Cover" width="211" height="284"&gt;
&lt;p&gt;Este es un libro que me gustaría leer completo, por suerte puedo hacerlo desde mi computadora por que está completamente disponible en internet: &lt;a href="http://www.catb.org/~esr/writings/taoup/"&gt;http://www.catb.org/~esr/writings/taoup/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Título:&lt;/strong&gt; The Art of Unix Programming&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Autor:&lt;/strong&gt; Eric S. Raymond&lt;/p&gt;
&lt;p&gt;&lt;em&gt;The Art of Unix Programming attempts to capture the engineering wisdom and philosophy of the Unix community as it's applied today — not merely as it has been written down in the past, but as a living "special transmission, outside the scriptures" passed from guru to guru. Accordingly, the book doesn't focus so much on "what" as on "why", showing the connection between Unix philosophy and practice through case studies in widely available open-source software.&lt;/em&gt;&lt;/p&gt;&lt;/div&gt;</description><category>Cosas que leo</category><category>ESR</category><category>Unix</category><guid>http://www.juanjoconti.com.ar/posts/2005/11/04/the-art-of-unix-programming.html</guid><pubDate>Fri, 04 Nov 2005 11:20:39 GMT</pubDate></item><item><title>Breve historia de la Cultura Hacker</title><link>http://www.juanjoconti.com.ar/posts/2005/11/04/breve-historia-de-la-cultura-hacker.html</link><dc:creator>Juanjo</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Encontré en la &lt;a href="http://g.1asphost.com/radiored/index.html"&gt;biblioteca&lt;/a&gt; del programa radial &lt;a href="http://www.red-handed.com.ar/radio.html"&gt;Red-Handed&lt;/a&gt; la traducción de este ensayo de &lt;a href="http://www.catb.org/~esr/"&gt;Eric Raymond&lt;/a&gt;. Leí el original en inglés hace unos años y me gustó mucho, dejo el link para que puedan leerlo: &lt;a href="http://g.1asphost.com/radiored/textos/historia-cultura-hacker.html"&gt;http://g.1asphost.com/radiored/textos/historia-cultura-hacker.html&lt;/a&gt;&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;&lt;em&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Algunas de las personas que crecieron en la cultura de los Auténticos Programadores permanecieron en activo hasta bien entrados los 90. Seymour Cray, diseñador de la gama de supercomputadoras Cray, fue uno de los mejores. Se dice de él que, en cierta ocasión, introdujo de principio a fin un sistema operativo de su invención en una de sus computadoras, usando los conmutadores de su panel de control. En octal. Sin un solo error. Y funcionó. &lt;/p&gt;
&lt;p&gt;&lt;em&gt;...&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt; El MIT, aunque hizo uso de la PDP-10 como todo el mundo, tomó un camino ligeramente diferente; rechazó por completo el software de DEC para ella y construyó su propio sistema operativo, el legendario ITS, cuyo significado, Sistema de Tiempo-compartido Incompatible, da una pista bastante buena sobre la actitud de los hackers del MIT. &lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;...&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Ken Thompson echó de menos el entorno Multics y comenzó a realizar pruebas, implementando una mezcla de sus características y algunas ideas propias en una vieja DEC PDP-7 rescatada de la basura.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Otro hacker llamado Dennis Ritchie inventó un nuevo lenguaje llamado C para usarlo en el embrionario Unix de Thompson. Al igual que Unix, C fue diseñado para ser ameno, flexible y no imponer límites.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;...&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt; Así estaban las cosas en 1980: tres culturas cuyos bordes se solapaban pero estaban agrupadas en torno a tecnologías muy distintas. La cultura de las PDP-10 y ARPANET, ligada a LISP, a MACRO, a TOPS-10, a ITS y al SAIL; la gente de Unix y C con sus PDP-11, sus VAXen y sus conexiones telefónicas rudimentarias, y una anárquica horda de entusiastas de los primeros microordenadores, decididos a acercar el potencial de las computadoras al pueblo.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;/div&gt;</description><category>ESR</category><category>hacker</category><category>Historias</category><category>Software Libre</category><guid>http://www.juanjoconti.com.ar/posts/2005/11/04/breve-historia-de-la-cultura-hacker.html</guid><pubDate>Fri, 04 Nov 2005 11:16:41 GMT</pubDate></item></channel></rss>