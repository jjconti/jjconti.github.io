<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>En borrador permanente (bugs)</title><link>http://www.juanjoconti.com.ar/</link><description></description><atom:link href="http://www.juanjoconti.com.ar/categories/bugs.xml" type="application/rss+xml" rel="self"></atom:link><language>es</language><lastBuildDate>Tue, 23 Jun 2015 01:31:16 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Una experiencia en PythonBugDay</title><link>http://www.juanjoconti.com.ar/posts/2008/01/19/una-experiencia-en-pythonbugday.html</link><dc:creator>Juanjo</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Hoy se llevó a cabo el octavo &lt;a href="http://wiki.python.org/moin/PythonBugDay" title="PBD" target="_blank"&gt;Python Bug Day&lt;/a&gt;. Sabía que era en estos días pero no lo tenía presente ni se me había ocurrido participar. Al mediodía &lt;a href="http://www.taniquetil.com.ar/plog/" title="Facu" target="_blank"&gt;Facundo Batista&lt;/a&gt; me lo recuerda por chat y me pregunto... ¿Por qué no? Puedo probar unas horas, ver que pasa, nunca compilé Python tal vez tenga que hacerlo para probar una solución.&lt;/p&gt;
&lt;p&gt;Me dieron una lista de &lt;a href="http://www.taniquetil.com.ar/cgi-bin/pytickets.py?nropag=0&amp;amp;priority=0&amp;amp;severity=0&amp;amp;component=0&amp;amp;version=0&amp;amp;keyword=6" title="easy bugs" target="_blank"&gt;bugs fáciles&lt;/a&gt;.  Y elejí este: &lt;a href="http://bugs.python.org/issue1779" title="1779" target="_blank"&gt;1779&lt;/a&gt;. El bug en particular podría haber sido resuelto en pocos minutos por un desaarrollador de Python. Es más, el mismo había sido reportado por el creador del lenguaje :D Pero como bien dice en uno de los comentarios, es un buen bug para el Python Bug Day. A un experto, resolverlo no le habría costado nada, pero tampoco le habría aportado nada. A un novato como a mi me sirvió para conocer algo del nucleo del lenguaje y el proceso que hay que seguir para resolver un bug:&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;ol&gt;
&lt;pre class="code literal-block"&gt;&lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Bajar la última versión del código fuente&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Compilar&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Correr los tests para ver que todo ande bien&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt; Encontrar el bug y arreglarlo&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Correr los tests nuevamente&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Arreglar los tests que fallan&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Agregar tests que prueben el arreglo&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Correr los tests nuevamente&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Armar un parche&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;

&lt;span class="nt"&gt;&amp;lt;li&amp;gt;&lt;/span&gt;Envair el parche&lt;span class="nt"&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;/pre&gt;


&lt;/ol&gt;

&lt;!--more--&gt;

&lt;p&gt;El bug, que continuará en las versiones previas de Python pero ya está corregido en Python 3000, es el siguiente:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&amp;gt;&amp;gt;&amp;gt; int("- 1")&lt;/p&gt;
&lt;p&gt;-1&lt;/p&gt;
&lt;p&gt;&amp;gt;&amp;gt;&amp;gt; float("- 1")&lt;/p&gt;
&lt;p&gt;Traceback (most recent call last):&lt;/p&gt;
&lt;p&gt;File "&amp;lt;stdin&amp;gt;", line 1, in &amp;lt;module&amp;gt;&lt;/p&gt;
&lt;p&gt;ValueError: invalid literal for float(): - 1&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;
&lt;p&gt;Cuando se quiere crear un número a partir de un string, no pueden haber espacios en blanco entre el signo (+ o -) y el número. El comportamiento correcto es el de la función &lt;code&gt;float&lt;/code&gt;. El de &lt;code&gt;int&lt;/code&gt; es errorneo. Necesita ser arreglado.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Obtener el código fuente&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Bajé del servidor svn la última versión de Python 3000, la nueva versión del lenguaje, para el cual el bug estaba abierto:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;svn co http://svn.python.org/projects/python/branches/py3k/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;(Esto llevó bastante tiempo. Mientras tanto cociné y almorcé.)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Compilar&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;cd py3k/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;./configure &amp;amp;&amp;amp; make&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Correr el intérprete compilado&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./python&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Correr los tests&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;make test&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;o&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./python Lib/test/regrtest.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Arreglar el bug&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;En los comentarios sel bug se decía que era simple de resolver y que no consistía más que en comentar 2 líneas en un archivo en C.&lt;/p&gt;
&lt;p&gt;Revisé el archivo &lt;code&gt;Objects/longobject.c&lt;/code&gt; y luego de entender como funcionaba la función &lt;code&gt;PyLong_FromString(char &lt;em&gt;str, char &lt;/em&gt;*pend, int base)&lt;/code&gt;, comenté las líneas 1688 y 1689. Problema resuelto!&lt;/p&gt;
&lt;p&gt;Compilé para que mis cambios se vean reflejados.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;make&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Y probé en el intérprete.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;gt;&amp;gt;&amp;gt; int("- 1")&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Traceback (most recent call last):&lt;/p&gt;
&lt;p&gt;File "&amp;lt;stdin&amp;gt;", line 1, in &amp;lt;module&amp;gt;&lt;/p&gt;
&lt;p&gt;ValueError: invalid literal for int() with base 10: '- 1'&lt;/p&gt;
&lt;p&gt;Perfecto!&lt;/p&gt;
&lt;p&gt;Luego corrí las pruebas afectadas por mi cambio y fallaron.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;./python Lib/test/test_builtin.py&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;La función en particular era &lt;code&gt;test_int(self)&lt;/code&gt;. Luego de una mirada rápida, comenté los valores de una lista que hacían fallar la prueba y pensé que con eso era suficiente. Consulté y me dijeron que también agregue mi cambio en Misc/NEWS. Lo hice. Lo siguiente era generar el parche.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;svn diff | tee bug_fix_for_1779.diff&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;El mismo está en &lt;a href="http://bugs.python.org/file9220" title="first patch" target="_blank"&gt;http://bugs.python.org/file9220&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Luego lo vio Facundo y me dijo que tenía que tenía que agregar pruebas para mi parche. Me llevó bastante tiempo entender como funcionaba la prueba. Finalmente, luego de preguntar bastante conseguí el resultado deseado. Volví a generar un parche y a subirlo.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;svn diff | tee bug_fix_for_1779-plustests.diff&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="http://bugs.python.org/file9228" title="patch2" target="_blank"&gt;http://bugs.python.org/file9228&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;La experiencia&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;La verdad es que la experiencia fue muy buena. En unas 5 horas aprendí mucho sobre Python en si y sobre su ciclo de desarrollo, interactué con una comunidad despuesta a darte una mano cuando la necesitás y arreglé un error en el lenguaje que más uso. &lt;em&gt;Voilá!&lt;/em&gt; Muchas gracias Comunidad de Python por organizar este Python Bug Day.&lt;/p&gt;&lt;/div&gt;</description><category>Aprendiendo Python</category><category>bugs</category><category>Eventos</category><category>Python</category><guid>http://www.juanjoconti.com.ar/posts/2008/01/19/una-experiencia-en-pythonbugday.html</guid><pubDate>Sat, 19 Jan 2008 16:46:09 GMT</pubDate></item></channel></rss>