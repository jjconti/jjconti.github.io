<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>En borrador permanente (RMS)</title><link>http://www.juanjoconti.com.ar/</link><description></description><atom:link href="http://www.juanjoconti.com.ar/categories/rms.xml" type="application/rss+xml" rel="self"></atom:link><language>es</language><lastBuildDate>Tue, 23 Jun 2015 01:31:22 GMT</lastBuildDate><generator>http://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Siempre es bueno escuchar a Richard</title><link>http://www.juanjoconti.com.ar/posts/2010/04/18/siempre-es-bueno-escuchar-a-richard.html</link><dc:creator>Juanjo</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;El jueves después de trabajo, salimos César, Ceci, Mariano y yo hacia la ciudad de Rosario. Como se había anunciado, &lt;a href="http://www.stallman.org/" target="_blank"&gt;Richard Stallman&lt;/a&gt;, el padre del &lt;a href="http://www.gnu.org/philosophy/free-sw.html" target="_blank"&gt;Software Libre&lt;/a&gt; y líder del &lt;a href="http://www.gnu.org/" target="_blank"&gt;proyecto GNU&lt;/a&gt; daría una charla abierta a las 19 en un auditorio del &lt;a href="http://www.ips.edu.ar/" target="_blank"&gt;Politécnico de Rosario&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;p style="text-align: center;"&gt;&lt;a href="http://www.juanjoconti.com.ar/wp-content/uploads/2010/04/1rajornadagnulinuxrosariojuanjo.gif"&gt;&lt;img class="size-medium wp-image-2213 aligncenter" title="1rajornadagnulinuxrosariojuanjo" src="http://www.juanjoconti.com.ar/wp-content/uploads/2010/04/1rajornadagnulinuxrosariojuanjo-300x195.gif" alt="1rajornadagnulinuxrosariojuanjo" width="300" height="195"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Recién cuando estaba manejando, caí en la cuenta de que la última y única vez que había oído hablar a RMS había sido 10 años atrás. Escribí por ese entonces:&lt;/p&gt;
&lt;blockquote&gt;...1º Jornada nacional de GNU/Linux,   del 4 al 6 de Agosto de 2000, organizado por el LUGRo (Linux User Group de  Rosario). Fue el primer gran evento del software libre y Linux realizado  en nuestro país.



La verdad es que estuvo muy buena, buena organización,   puntualidad,   espacio suficiente para que los concurrentes disfruten de  un evento de esta  envergadura, Y sin duda lo mejor de toda la jornada fue  la presencia "estelar"  de Richad&lt;span&gt; &lt;/span&gt; M. Stallman (RMS)...&lt;/blockquote&gt;

&lt;p&gt;Tenía 15 años y solo un par de meses antes me había enterado qué existía &lt;em&gt;otro&lt;/em&gt; sistema operativo, leído sobre las 4 libertades del software y escuchado sobre las personas que trabajaban en esta comunidad. Dos meses después de haber conocido esto, el hombre que había iniciado el movimiento venía a mi país, a menos de 200 km de mi casa a presentar sus ideas: no me lo quería perder.&lt;/p&gt;
&lt;p&gt;Así fue que con un amigo viajamos a Rosario, nos instalamos en la casa de sus tías y participamos del primer gran evento de Software Libre  de latinoamérica, no teníamos ni idea de dónde estábamos, no teníamos ni idea de como usar Bash y apenas habíamos intentado instalar alguna distribución, a riesgo de quemar el monitor. Sin embargo, fue una gran decisión: conocí personas con la que me relaciono aún hoy, me motivó para seguir aprendiendo y me permitió formar parte de un movimiento de escala mundial sin precedentes.&lt;/p&gt;
&lt;p style="text-align: center;"&gt;&lt;a href="http://www.juanjoconti.com.ar/wp-content/uploads/2010/04/rms_en_rosario.jpg"&gt;&lt;img class="size-medium wp-image-2215 aligncenter" title="rms_en_rosario" src="http://www.juanjoconti.com.ar/wp-content/uploads/2010/04/rms_en_rosario-300x199.jpg" alt="rms_en_rosario" width="300" height="199"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;10 años después volvió a Rosario.&lt;/p&gt;
&lt;blockquote&gt;El día jueves 15 comenzó con la visita al rector de la UNR, el señor Darío Maiorana, quién se entrevisto con Richard en una charla de 45 minutos, si bien la misma estaba pactada para solo 5. En dicha charla, Maiorana se intereso por la utilización de Software Libre en la educación y acepto la sugerencia de ir adoptándolo en todas las facultades de la UNR.



Luego de esta entrevista, Richard estuvo ante periodistas en una conferencia de prensa donde fue bombardeado con preguntas de todo tipo las cuales fueron contestadas puntualmente y sin ambigüedad.



Por la tarde, fue recibido por el Intendente de Rosario, el señor Miguel Lifschitz. En la entrevista que mantuvieron Lifschitz le comento a Richard sobre los esfuerzos realizados por la Municipalidad para adoptar el uso de Software Libre en la administración pública. Al mismo tiempo, Richard le pidió al intendente que se publiquen en los sitios web de la municipalidad y las dependencias de la misma, un mensaje de que se utiliza Software Libre para el desarrollo y funcionamiento del sitio.

Al final la charla se le entrego al intendente una copia del libro “&lt;a href="http://www.vialibre.org.ar/wp-content/uploads/2009/03/evoto.pdf"&gt;Voto Electrónico, Los riesgos de una ilusión&lt;/a&gt;”



&lt;a href="http://www.juanjoconti.com.ar/wp-content/uploads/2010/04/Hacker.jpg"&gt;&lt;img class="alignright size-medium wp-image-2216" title="Hacker" src="http://www.juanjoconti.com.ar/wp-content/uploads/2010/04/Hacker-300x225.jpg" alt="Hacker" width="300" height="225"&gt;&lt;/a&gt;Más tarde, a las 19, se realizo la charla libre y gratuita en el auditorio de la Facultad de Ciencias Exactas, Ingeniería y Agrimensura donde 600 personas estuvieron presentes ante un discurso magistral sobre la filosofía libre.

La respuesta del público fue muy buena y el evento termino con una larga cola de personas que quisieron inmortalizar su presencia junto a Stallman en fotos que serán publicadas en el sitio del LUGRo.



El día viernes por la mañana se realizo una reunión en el Concejo Municipal de la Ciudad de Rosario donde se entrevisto con su presidente, Miguel Zamarini, el concejal Jorge Boasso y varias autoridades y concejales.

Hubo especial interés de los concejales sobre la temática y Richard pudo explicar varios puntos importantes como la necesidad de utilizar Software Libre en la educación y el estado. También charlo con los concejales sobre los peligros de la utilización de sistemas electrónicos en los procesos de votación.



Fuente: &lt;a href="http://www.lugro.org.ar/Resumen_de_Richard_Stallman_en_Rosario" target="_blank"&gt;LUGRo&lt;/a&gt;&lt;/blockquote&gt;

&lt;p style="text-align: center;"&gt;&lt;a href="http://www.juanjoconti.com.ar/wp-content/uploads/2010/04/Puertas_traseras.jpg"&gt;&lt;img class="aligncenter size-medium wp-image-2212" title="Puertas_traseras" src="http://www.juanjoconti.com.ar/wp-content/uploads/2010/04/Puertas_traseras-300x222.jpg" alt="Puertas_traseras" width="300" height="222"&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Una de las primeras cosas que leí escritas por RMS fue &lt;a href="http://www.juanjoconti.com.ar/2005/09/04/el-derecho-a-leer/" target="_blank"&gt;El Derecho a Leer&lt;/a&gt;, un cuento corto de ciencia ficción en el que se previene de un posible futuro y se ve la importancia del Software Libre en una sociedad. Si no lo leiste, &lt;a href="http://www.juanjoconti.com.ar/2005/09/04/el-derecho-a-leer/" target="_blank"&gt;te invito a hacerlo&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</description><category>Eventos</category><category>Fotos</category><category>RMS</category><category>Software Libre</category><guid>http://www.juanjoconti.com.ar/posts/2010/04/18/siempre-es-bueno-escuchar-a-richard.html</guid><pubDate>Sun, 18 Apr 2010 12:07:30 GMT</pubDate></item><item><title>Donde no hay seguridad nadie puede romperla</title><link>http://www.juanjoconti.com.ar/posts/2009/08/24/donde-no-hay-seguridad-nadie-puede-romperla.html</link><dc:creator>Juanjo</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;img class="size-full wp-image-1746" title="Richard Stallman" src="http://www.juanjoconti.com.ar/wp-content/uploads/2009/08/IMG_4773.jpg" alt="IMG_4773" width="233" height="350"&gt;
&lt;p&gt;Hoy me pasó mi padre un &lt;a href="http://www.pagina12.com.ar/diario/dialogos/21-130490-2009-08-24.html" target="_blank"&gt;artículo en Página 12&lt;/a&gt; con una reciente entrevista a &lt;a href="http://www.stallman.org/" target="_blank"&gt;RMS&lt;/a&gt;. El artículo se titula, como este post, Donde no hay seguridad nadie puede romperla. En la noticia, el título no es más que una frase sacada de una de sus respuestas, parte de una anécdota casi que poco está relacionada con el resto de la nota, pero me llamó muchísimo la atención. Rescato esta parte:&lt;/p&gt;
&lt;blockquote&gt;En ese sistema no había seguridad, no había claves, no había protección de archivos, cualquier persona podía entrar en la computadora bajo cualquier nombre y hacer cualquier cosa, y nos gustaba que fuera así, deliberadamente implementábamos el sistema sin seguridad. Mi trabajo en el laboratorio era mejorar el sistema. Si hubiéramos querido tener seguridad nos tendríamos que haber dedicado, entre otras tareas, a implementar la seguridad, que era lo que no queríamos. Entonces, donde no hay seguridad nadie puede romperla.&lt;/blockquote&gt;

&lt;p&gt;El periodista entonces pregunta, a lo mejor algo alarmado, si puede existir un sistema sin seguridad. A lo que Stallman contesta:&lt;/p&gt;
&lt;blockquote&gt;Aunque muchos pueden pensar que es imposible, es algo que todavía puede ser posible. Pero con esto no quiero decir que no tiene que haber seguridad en los bancos, por ejemplo, no estoy a favor de robar las cuentas bancarias. Pero nuestro laboratorio no era un banco, no teníamos datos personales, no teníamos datos financieros, fue un laboratorio para colaborar en la investigación y el desarrollo. Pero hoy en día es algo diferente, porque habitualmente usamos computadoras personales, pero en los años ’70 una computadora era demasiado cara, era casi imposible tener una computadora personal. Y en ese período el laboratorio tenía dos computadoras principales que todos teníamos que compartir. Cuando la gente comparte una computadora, tener seguridad entre los usuarios exige imponer un estado policíaco, pero no es igual con las computadoras personales, porque fácilmente se puede excluir a los demás de tu computadora, sin imponerse a uno mismo un estado policíaco. Pero en las computadoras compartidas nosotros no deseábamos tener seguridad, no fue sólo un capricho, fue por motivos racionales, porque queríamos vivir en libertad, &lt;strong&gt;no queríamos desarrollar un arma para los administradores para someternos&lt;/strong&gt;.&lt;/blockquote&gt;

&lt;p&gt;Para pensarlo.&lt;/p&gt;&lt;/div&gt;</description><category>RMS</category><category>seguridad</category><guid>http://www.juanjoconti.com.ar/posts/2009/08/24/donde-no-hay-seguridad-nadie-puede-romperla.html</guid><pubDate>Mon, 24 Aug 2009 21:10:48 GMT</pubDate></item><item><title>Guantanamero by RMS</title><link>http://www.juanjoconti.com.ar/posts/2007/04/21/guantanamero-by-rms.html</link><dc:creator>Juanjo</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;:) Acabo de publicar esto como un comentario a otro post de la sección Humor de este blog mientras escucho la canción. Está linda! Así que dejo una referencia a esta como un post nuevo para que nadie se la pierda ;-)&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.juanjoconti.com.ar/2007/03/30/chestallman/#comment-1793" title="Guantanamero"&gt;http://www.juanjoconti.com.ar/2007/03/30/chestallman/#comment-1793&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;</description><category>humor</category><category>RMS</category><guid>http://www.juanjoconti.com.ar/posts/2007/04/21/guantanamero-by-rms.html</guid><pubDate>Sat, 21 Apr 2007 11:40:53 GMT</pubDate></item><item><title>Chestallman</title><link>http://www.juanjoconti.com.ar/posts/2007/03/30/chestallman.html</link><dc:creator>Juanjo</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;center&gt;&lt;a href="http://geekz.co.uk/shop/store/show/che-stallman-tshirt"&gt;&lt;img src="http://www.juanjoconti.com.ar/wp-content/uploads/2007/03/che-stallman-tshirt-show.jpg" alt="Chestallman"&gt;&lt;/a&gt;&lt;/center&gt;
&lt;p&gt;Más items: &lt;a href="http://geekz.co.uk/shop/"&gt;Geekz&lt;/a&gt;.&lt;/p&gt;&lt;/div&gt;</description><category>humor</category><category>RMS</category><category>Software Libre</category><guid>http://www.juanjoconti.com.ar/posts/2007/03/30/chestallman.html</guid><pubDate>Fri, 30 Mar 2007 12:54:29 GMT</pubDate></item><item><title>Sobre el nuevo borrador de GPL v3</title><link>http://www.juanjoconti.com.ar/posts/2007/03/29/sobre-el-nuevo-borrador-de-gpl-v3.html</link><dc:creator>Juanjo</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Ayer se publicó el tercer borrador de la licencia GPL3:&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;blockquote&gt;Ha habido muchos juicios a través de los años que han añadido interpretación a las leyes de las cuales depende la GPL2. A medida que la ley cambia, la GPL debe cambiar para mantenerse a la misma altura, o se volverá obsoleta.&lt;/blockquote&gt;
&lt;p&gt;Este post es algo largo, si no tenés mucho tiempo para leerlo te recomiendo que salntes al final, a la sección: &lt;strong&gt;Palabras de Linus&lt;/strong&gt;.&lt;/p&gt;
&lt;!--more--&gt;

&lt;h3&gt;Despejando el FUD contra la GPL3&lt;/h3&gt;

&lt;p&gt;Por Bruce Perens (&lt;a href="http://www.linux-watch.com/news/NS9312220011.html"&gt;original&lt;/a&gt; - &lt;a href="http://freetrans.blogspot.com/2007/03/el-camino-hacia-la-gpl-3.html"&gt;traducción&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Se ha hablado mucho de la 3ra versión de la GPL: que si va demasiado lejos como para ser admisible en los negocios, que si los desarrolladores del kernel Linux algún día se cambiarán a ésta, que si nuestra comunidad se dividirá o se producirá malestar en ella debido a esto.&lt;/p&gt;
&lt;p&gt;Muchos de esos comentarios están basados en un pobre entendimiento de los términos de la GPL3 y, con el inminente lanzamiento de la nueva licencia, es tiempo de aclararlos.&lt;/p&gt;
&lt;p&gt;Los confundidos opositores de la GPL3 dicen que ésta no permitirá que el Linux kernel sea usado en sistemas que implementen DRM, y que la GPL3 forzará a los fabricantes a "entregar sus llaves". Si Linus Torvalds y los desarrolladores del kernel todavía creen esto, están equivocados.&lt;/p&gt;
&lt;p&gt;El propósito de la GPL3 (y de muchas otras licencias de software libre) es el de dar el derecho de modificar cualquier software cubierto por esta licencia. La GPL versión 3 se esmera más que otras licencias para asegurarse que este derecho funcione con sistemas embebidos. Lo que esencialmente hace es intercambiar a los creadores esos sistemas el derecho de manipular sus recursos en nuestro gran software GPL a cambio del derecho del consumidor de hacer que ese hardware corra programas nuevos e innovadores que no fueron previstos por su fabricante, o sea, que sí se puedan instalar modificaciones.&lt;/p&gt;
&lt;p&gt;La GPL3 no prohíbe el DRM y no requiere que el DRM sea poco seguro o poco confiable. Lo que sí requiere es que el DRM no rompa el software GPL o lo asegure contra modificaciones, y debe continuar funcionando si el software GPL es modificado.&lt;/p&gt;
&lt;p&gt;Un sistema con software GPL3 y DRM deberá permitir al software GPL, el sistema operativo kernel por ejemplo, ser reemplazado. Deberá permitir que el sistema arranque luego de dicho cambio y tendrá que seguir permitiendo al sistema correr multimedia o hacer cualquier otra cosa que el DRM hiciese antes del cambio. No deberá proveer acceso al flujo de datos desencriptado y no habría necesidad de producir claves de encriptación mientras el DRM esté implementado para cumplir con los requerimientos de la GPL3.&lt;/p&gt;
&lt;p&gt;Si el Linux kernel estuviera bajo la licencia GPL3, el fabricante estaría prohibido de usar DRM para sellar el kernel de tal forma que fuese imposible modificarlo, como hacen los Tivo. Pero eso no significa que no pueda tener DRM a prueba de balas para restringir multimedia usando Linux y GPL3 y eso no podría impedir a Tivo de usar nuevos kernels. Sólo dice donde ése DRM debe ser colocado: en cualquier lugar que pueda existir sin que le quite el derecho al usuario de cambiar el software GPL.&lt;/p&gt;
&lt;p&gt;Si la GPL3 es aplicado al kernel de un sistema operativo, hay cuatro lugares en donde se puede colocar el DRM en ese sistema y seguir cumpliendo con la GPL3. Y esos lugares son los mejores, los más seguros y más confiables en donde poner el DRM desde un punto de vista técnico, independientemente de la licencia:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;En el hardware.- Este sería usualmente un circuito integrado de aplicación específica o una unidad (arreglo) lógica programable que interprete flujos encriptados en aparatos de audio o video.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;En un coprocesador.- La mayoría de los teléfonos celulares que ofrecen funciones PDA (y PDAs que contienen dispositivos wireless) tienen dos o más CPUs, generalmente un ARM9 corriendo en la interfase del usuario y las aplicaciones, y un ARM7 que ejecuta la capa de enlace de datos wireless o el conjunto de el GSM. Usted puede poner el DRM en el procesador que no está corriendo el kernel y luego el componente GPL sólo se comunica con un bien definido enlace interprocesador al CPU externo que ejecuta el DRM. Las obligaciones de la GPL no cruzan ese enlace.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;En un kernel bajo el kernel.- Microsoft XP y Vista han usado esta arquitectura: el núcleo del sistema DRM está en un microkernel llamado "nib" que está bajo un verdadero kernel, y hospeda al verdadero kernel como el kernel hospedaría a una aplicación en modo usuario.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;En un programa en modo usuario.- Las obligaciones de la GPL en la licencia del kernel no se transmiten a través de la interfaz de llamada al sistema desde el kernel a una aplicación hospedada por ese kernel.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Muchos han interpretado que la GPL2 siempre hizo la misma restricción en el DRM que ha sido planteada más explícitamente en la GPL3. Siempre he aconsejado a mis clientes de consultoría estratégica que hagan sus planes técnicos asumiendo que esto es así, en lugar de decidirlo en una demanda que podría salir cara. Los 4 lugares para el DRM que mencioné también se aplican para la GPL2.&lt;/p&gt;
&lt;p&gt;Otra objeción que también se escucha frecuentemente a la GPL3 es que la "GPL2 estaba lo suficientemente bien". Pero la GPL nunca ha sido independiente, siempre ha dependido de la interpretación local de los derechos de autor y de otras leyes para que le den fuerza, y esas cosas cambian con el tiempo.&lt;/p&gt;
&lt;p&gt;Cuando la GPL fue escrita no había web, la música salía de tocadiscos, los videos en videocasetes y en lugar del DRM, sólo había una "rudimentaria protección anticopia" de software. La aparición de microprocesadores, software, la web y medios digitales trajeron grandes cambios en la ley con muchos cambios en los derechos de autor, patentes, la naturaleza del consentimiento, contratos, licencias sin lectura previa y permisos de derechos de autor. Ha habido muchos juicios a través de los años que han añadido interpretación a las leyes de las cuales depende la GPL2. A medida que la ley cambia, la GPL debe cambiar para mantenerse a la misma altura, o se volverá obsoleta.&lt;/p&gt;
&lt;p&gt;En el acuerdo Novell-Microsoft una laguna jurídica fue creada por los abogados de Microsoft y Novell, una tan nueva para nosotros que los dos primeros bosquejos de GPL3 no contenía las precauciones del caso para contrarrestarla. Esta experiencia muestra que GPL debe seguir creciente para poder mantenerse a flote. El estancarse en una versión con el tiempo sólo resultaría en estropear sus protecciones.&lt;/p&gt;
&lt;p&gt;¿Y qué hay con respecto a Novell-Microsoft? ¿Habrá otra precaución para invalidar de alguna forma a la GPL3? ¿Cómo funcionará? Richard Stallman anunció el lunes 19 de marzo que la GPL3 contendrá precauciones que invalidarían el acuerdo Novell-Microsoft. Funciona así: si alguna entidad que distribuye el software dispone proteger a un grupo particular de patentes que se refieran a ese software, debe protegerlos a todos. Esto arregla el vacío legal del que se había aprovechado el acuerdo Novell-Microsoft sin ser discriminatorio o injusto.&lt;/p&gt;
&lt;p&gt;¿Qué significa esto para Novell? Eso no evitará que ellos usen el software GPL2 existente en sus versiones actuales. Pero podrían congelarse en ambar como un ejemplo del estado de los programas a comienzos del 2007, mientras que el resto de las distribuciones de la comunidad de Software Libre y Linux avanzan al futuro. Torvalds se resiste a cambiar la licencia de Linux enseguida, pero programas críticos en sistemas Novell son de propiedad directa de la FSF: GLibC, la librería fundamental del que todo programa depende, el compilador C y otros componentes clave.&lt;/p&gt;
&lt;p&gt;Proyectos que no son propiedad de la FSF también se cambiarán: la motivación de los programadores Open Source (código abierto) de publicar nuevo código al público es en parte dependiente de la ejecutabilidad de los términos de GPL de compartir en partes iguales, y la GPL3 ofrecerá la más continua ejecutabilidad.&lt;/p&gt;
&lt;p&gt;La mayor parte de los proyectos de código abierto han escogido la GPL, y el paradigma de compartir en partes iguales, en lugar del sabor de la licencia BSD/Apache que es un regalo incondicional. Muchos desarrolladores simplemente dejarían de crear si no pudiesen compartir porque sentirían como si las corporaciones y las distribuciones de Linux estuvieran aprovechándose de ellos, como si fuesen empleados sin sueldos. La mayor parte de aquellos que se sientan así mudarán sus proyectos a la GPL3.&lt;/p&gt;
&lt;p&gt;La GPL es también una muy buena licencia para negocios como MySQL, porque facilita el paradigma de la doble licencia, en donde un cliente puede pagar al creador de software en lugar de compartir cambios que el cliente le hace al software. Esté seguro que esas compañías y proyectos se cambiarán a la GPL3 una vez que hayan estudiado la nueva versión.&lt;/p&gt;
&lt;p&gt;¿Pero cómo puede el proyecto del kernel Linux, con sus miles de desarrolladores, cambiar su licencia? Ni siquiera podemos llegar a todos ellos, algunos están muertos y sus estados no diferencian entre una licencia de software y una de conducir. Pero cambiar la licencia es más fácil de lo que la gente piensa.&lt;/p&gt;
&lt;p&gt;Primero, no es un cambio fundamental: la intención de la GPL3 es la misma que la de la GPL2, el cambio está en la implementación. Dado esto, lo que se necesitaría para tal cambio seria que Torvalds publicara sus intenciones de comenzar a sacar lanzamientos con la nueva licencia, algo así como un aviso legal. Un grupo de gente objetaría y tendrían derecho a exigir que sus contribuciones fueran removidas del nuevo lanzamiento. El equipo de kernel nunca se ha resistido a reemplazar código cuando ha sido necesario, y nunca se ha tardado en hacerlo sin importar cuan grande fuera la parte a ser reemplazada. Sólo vean el reemplazo de Bitkeeper por "git", una tarea muy grande para el equipo de reescritura, y aún así estuvo funcionando en 5 semanas. Así que, el código que pertenezca a la gente que está en contra de la GPL3 podría ser fácilmente reemplazado.&lt;/p&gt;
&lt;p&gt;Luego que haya pasado un tiempo, el lanzamiento saldría bajo la nueva licencia y la vida seguiría. Hay precedentes de esto, ya que Torvald ha hecho dos cambios significativos al preludio de la GPL2 en el kernel, publicando sus intenciones y luego lanzándolo.&lt;/p&gt;
&lt;p&gt;¿Pero el equipo de kernel algún día se cambiará a la GPL3? Linus Torvalds y algunos otros miembros del equipo kernel no les gusta hoy la GPL3. Pero, como lo expliqué más arriba, sus razones para no agradarles esta licencia podrían no ser válidas. En cuanto a Torvalds hay que reconocerle algo: cuando se equivoca se le puede convencer de aquello eventualmente. Pero a veces eso toma años. Guiándonos por su historia, creo que podríamos esperar uno o dos años para ver al equipo de kernel dignarse a cambiar a la GPL3. Inclusive si no lo hacen, muchos proyectos importantes se cambiarán a la GPL3 que de seguro será un factor importante en el futuro en nuestras vidas.&lt;/p&gt;
&lt;h3&gt;Comic&lt;/h3&gt;

&lt;p&gt;&lt;/p&gt;&lt;center&gt;
&lt;p&gt;&lt;img src="http://www.juanjoconti.com.ar/wp-content/uploads/2007/03/ep041.jpg" alt="Linus and GPL3"&gt;&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;/center&gt;
&lt;h3&gt;Palabras de Linus&lt;/h3&gt;

&lt;p&gt;&lt;a href="http://news.com.com/2061-10795_3-6171300.html?tag=nefd.top"&gt;Original en inglés y un poco más largo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Linus Torvalds, lider del proyecto Linux (kernel) y una de los más importantes desarrolladores de la comunidad del Software Libre dijo el miércoles que está bastante complacido con los cambios en tercer borrador de la GPL3.&lt;/p&gt;
&lt;p&gt;El kernel Linux y muchos otros paquetes de software de más alto nivel se encuentra licenciados con la licencia GPL2. Torvalds se ha expresado fuertemente en contra de versiones previas del borrador de la GPL3, algunas de estas críticas parecen haberse ido o almenos moderado.&lt;/p&gt;
&lt;blockquote&gt;En realidad estoy muy complacido. No porque piense que es perfecta, simplemente por que pienso que ciertamente es mucho mejor de lo que yo esperaba de los borradores anteriores.&lt;/blockquote&gt;

&lt;blockquote&gt;De hecho es mejor licencia que la GPL2, estoy todavía un poco escéptico, pero por lo menos estoy así en lugar de con un "Dios, no!".&lt;/blockquote&gt;

&lt;blockquote&gt;Estoy mucho más contento con muchas partes del borrador. Pienso que se lee mejor, y algunos de los peores horrores fueron eliminados completamente.&lt;/blockquote&gt;

&lt;blockquote&gt;El borrador actual me hace pensar que es al menos posible en teoría, pero si es práctico y vale la pena es una cosa totalmente diferente. Hablando en términos prácticos, requeriría mucho trabajo asegurarse de que todo lo relevante es GPL3-compatible incluso si decidimos que la GPL3 está bien.&lt;/blockquote&gt;

&lt;p&gt;Este no lo traduzco por miedo a que se pierda el significado:&lt;/p&gt;
&lt;blockquote&gt; The 'we control not just the software, but also the hardware it runs on' parts still drive me up the wall because I think they are so fundamentally broken. But the new draft at least limits it to a much saner subset and makes it clearer too.&lt;/blockquote&gt;

&lt;p&gt;&lt;/p&gt;&lt;/div&gt;</description><category>GPL</category><category>RMS</category><category>Software Libre</category><guid>http://www.juanjoconti.com.ar/posts/2007/03/29/sobre-el-nuevo-borrador-de-gpl-v3.html</guid><pubDate>Thu, 29 Mar 2007 19:56:55 GMT</pubDate></item><item><title>Encuentre las 7 diferencias</title><link>http://www.juanjoconti.com.ar/posts/2006/05/17/encuentre-las-7-diferencias.html</link><dc:creator>Juanjo</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;¿Es Ud capaz de encontrar las 7 diferencias? ;-)&lt;/p&gt;
&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;center&gt;&lt;img id="image76" src="http://firebirds.com.ar/%7Ejuanjo/wordpress/wp-content/uploads/2006/05/rms-sign.jpg" alt="rms vs ati"&gt;&lt;/center&gt;
&lt;p&gt;Richard M. Stallman -- Massachusetts, EEUU -- &lt;a href="http://www.fsf.org/blogs/community/rms-ati-protest.html"&gt;más información&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;center&gt;&lt;img id="image77" src="http://firebirds.com.ar/%7Ejuanjo/wordpress/wp-content/uploads/2006/05/viena.jpg" alt="viena"&gt;&lt;/center&gt;
&lt;p&gt;Evangelina Carrozo -- Viena, Austria -- &lt;a href="http://www.lanacion.com.ar/politica/nota.asp?nota_id=805680&amp;amp;origen=ranking"&gt;más información&lt;/a&gt;





&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;&lt;/div&gt;</description><category>humor</category><category>RMS</category><guid>http://www.juanjoconti.com.ar/posts/2006/05/17/encuentre-las-7-diferencias.html</guid><pubDate>Wed, 17 May 2006 00:08:08 GMT</pubDate></item><item><title>El Derecho a Leer</title><link>http://www.juanjoconti.com.ar/posts/2005/09/04/el-derecho-a-leer.html</link><dc:creator>Juanjo</dc:creator><description>&lt;div&gt;&lt;p&gt;&lt;/p&gt;&lt;em&gt;Este cuento lo leí por primera vez hace algunos años ya. El autor es &lt;a href="http://www.stallman.org"&gt;rms&lt;/a&gt;, fundador del proyecto &lt;a href="http://www.gnu.org"&gt;GNU&lt;/a&gt;. &lt;/em&gt;
&lt;p&gt;Este artículo fue publicado en el número de febrero de 1997 de Communications of the ACM (Vol. 40, Número 2).&lt;/p&gt;
&lt;p&gt;(de "El camino a Tycho", una colección de artículos sobre los antecedentes de la Revolución Lunar, publicado en Luna City en 2096) &lt;/p&gt;
&lt;p&gt;Para Dan Halbert el camino a Tycho comenzó en la universidad, cuando Lissa Lenz le pidió prestado su ordenador. El de ella se había estropeado, y a menos que pudiese usar otro reprobaría su proyecto de fin de trimestre. No había nadie a quien se atreviera a pedírselo, excepto Dan.&lt;/p&gt;
&lt;!--more--&gt;

&lt;p&gt;Esto puso a Dan en un dilema. Tenía que ayudarle, pero si le prestaba su ordenador ella podría leer sus libros. Dejando de lado el riesgo de ir a la cárcel durante muchos años por dejar a otra persona leer sus libros, la simple idea le sorprendió al principio. Como a todo el mundo, se le había enseñado desde la escuela primaria que compartir libros era algo malo y desagradable, algo que sólo los piratas harían.&lt;/p&gt;
&lt;p&gt;Además, no había muchas posibilidades de que la SPA (la "Software Protection Authority", o Autoridad de Protección del Software), no lo descubriese. En sus clases de programación Dan había aprendido que cada libro tenía un control de copyright que informaba de cuándo y dónde fue leído, y quién lo leía, a la oficina central de licencias (usaban esa información para descubrir piratas, pero también para vender perfiles personales a otras compañías). La próxima vez que su ordenador se conectase a la red, la oficina central de licencias lo descubriría. Él, como propietario del ordenador, recibiría el castigo más duro, por no tomar las medidas adecuadas para evitar el delito.&lt;/p&gt;
&lt;p&gt;Lissa no necesariamente pretendería leer sus libros. Probablemente lo único que ella necesitaba era escribir su proyecto. Pero Dan sabía que ella provenía de una familia de clase media que a duras penas se podía permitir pagar la matrícula, sin pensar en las tasas de lectura. Leer sus libros podía ser la su única forma de terminar la carrera. Entendía la situación; él mismo había pedido un préstamo para pagar por los artículos de investigación que leía (el 10% de ese dinero iba a parar a los autores de los artículos, y como Dan pretendía hacer carrera en la universidad, esperaba que sus artículos de investigación, en caso de ser citados frecuentemente, le dieran los suficientes beneficios como para pagar el crédito).&lt;/p&gt;
&lt;p&gt;Más tarde, Dan descubrió que hubo un tiempo en el que todo el mundo podía ir a una biblioteca y leer artículos, incluso libros, sin tener que pagar. Había investigadores que podían leer miles de páginas sin necesidad de becas de biblioteca. Pero desde los años 90 del siglo anterior, tanto las editoriales comerciales, como las no comerciales, habían empezado a cobrar por el acceso a los artículos. En el 2047, las bibliotecas de acceso público eran sólo un vago recuerdo.&lt;/p&gt;
&lt;p&gt;Había formas de evitar los controles de la SPA y la oficina central de licencias, pero también eran ilegales. Dan había tenido un compañero de su clase de programación, Frank Martucci, que consiguió un depurador ilegal, y lo usaba para evitar el control de copyright de los libros. Pero se lo contó a demasiados amigos, y uno de ellos lo denunció a la SPA a cambio de una recompensa (era fácil tentar, para traicionar a sus amigos, a estudiantes con grandes deudas). En 2047 Frank estaba en la cárcel; pero no por pirateo, sino por tener un depurador.&lt;/p&gt;
&lt;p&gt;Dan supo más tarde que hubo un tiempo en el que cualquiera podía tener un depurador. Incluso había depuradores libremente disponibles en la red. Pero los usuarios normales empezaron a usarlos para saltarse los controles de copyright, y finalmente un juez dictaminó que ese se había convertido en su uso práctico. Eso quería decir que los depuradores eran ilegales y los programadores que los habían escrito fueron a parar a la cárcel.&lt;/p&gt;
&lt;p&gt;Obviamente, los programadores necesitan depuradores, pero en el 2047 sólo había copias numeradas de los depuradores comerciales, y sólo disponibles para programadores oficialmente autorizados. El depurador que Dan había usado en sus clases de programación estaba detrás de un cortafuegos para que sólo se pudiese utilizar en los ejercicios de clase.&lt;/p&gt;
&lt;p&gt;También se podía saltar el control de copyright instalando un núcleo del sistema modificado. Dan llegó a saber que hacia el cambio de siglo había habido núcleos libres, incluso sistemas operativos completos. Pero ahora no sólo eran ilegales, como los depuradores: no se podía instalar sin saber la clave de root del ordenador, cosa que ni el FBI ni el servicio técnico de Microsoft te darían.&lt;/p&gt;
&lt;p&gt;Dan llegó a la conclusión de que simplemente no podía dejarle su ordenador a Lissa. Pero no podía negarse a ayudarle, porque estaba enamorado de ella. Cada oportunidad de hablar con ella era algo maravilloso. Y el hecho de que ella le hubiese pedido ayuda podría significar que sentía lo mismo por él.&lt;/p&gt;
&lt;p&gt;Dan resolvió el dilema haciendo algo incluso más increíble, le dejó el ordenador, y le dijo su clave. De esta forma, si Lissa leía sus libros, la oficina central de licencias pensaría que quien estaba leyendo era él. Seguía siendo un delito, pero la SPA no lo detectaría automáticamente. Sólo podrían saberlo si Lissa lo denunciaba.&lt;/p&gt;
&lt;p&gt;Si la universidad descubriese que le había dado su clave a Lissa significaría la expulsión para los dos, independientemente de para qué hubiese usado ella la clave. La política de la universidad era que cualquier interferencia con sus métodos de control sobre el uso de los ordenadores era motivo para una acción disciplinaria. No importaba si se hubiera hecho o no algún daño, el delito era el hecho de dificultar el control. Se asumía que esto significaba que se estaba haciendo algo prohibido, y no necesitaban saber qué.&lt;/p&gt;
&lt;p&gt;En general los estudiantes no eran expulsados por eso -no directamente-. En su lugar se les prohibía el acceso a los ordenadores de la universidad, lo que inevitablemente significaría reprobar todas sus asignaturas.&lt;/p&gt;
&lt;p&gt;Dan supo más tarde que ese tipo de políticas en la universidad empezaron en la década de 1980, cuando los estudiantes comenzaron a usar ordenadores masivamente. Antes de eso, las universidades tenían una actitud diferente: sólo se penalizaban las actividades dañinas, no las que eran meramente sospechosas.&lt;/p&gt;
&lt;p&gt;Lissa no denunció a Dan a la SPA. Su decisión de ayudarle llevó a que se casasen, y también a que cuestionasen lo que les habían enseñado cuando eran niños sobre el pirateo. Empezaron a leer sobre la historia del copyright, sobre la Unión Soviética y sus restricciones sobre las copias, e incluso sobre la constitución original de los Estados Unidos. Se mudaron a Luna, donde se encontraron con otros que de la misma forma intentaban librarse del largo brazo de la SPA. Cuando empezó el Levantamiento de Tycho en 2062, el derecho universal a leer se convirtió en uno de sus objetivos fundamentales.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Fuente:&lt;/strong&gt;&lt;a href="http://www.gnu.org/philosophy/right-to-read.html"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;http://www.gnu.org/philosophy/right-to-read.html&lt;/p&gt;&lt;/div&gt;</description><category>Historias</category><category>RMS</category><category>Software Libre</category><guid>http://www.juanjoconti.com.ar/posts/2005/09/04/el-derecho-a-leer.html</guid><pubDate>Sun, 04 Sep 2005 02:48:56 GMT</pubDate></item></channel></rss>